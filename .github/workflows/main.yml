name: Build DuckDB Lambda Layers

on:
  push:
    branches: [ main ]

jobs:

  build_geo_extension:
    name: Build and store geo extension
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build geo extension
        run: |
          # Create release folder
          mkdir -p $PWD/release

          # Run build
          docker build -t duckdb-geo-extension -f Dockerfile.geo .

          # Copy release from image
          docker run -v $PWD/release:/opt/mount --rm --entrypoint /bin/bash duckdb-geo-extension -c "cp /tmp/release/geo.duckdb_extension /opt/mount/"

      - name: Upload geo extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: geo-extension
          path: release/geo.duckdb_extension
  
  build_prql_extension:
    name: Build and store prql extension
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build prql extension
        run: |
          # Create release folder
          mkdir -p $PWD/release

          # Run build
          docker build -t duckdb-prql-extension -f Dockerfile.prql .

          # Copy release from image
          docker run -v $PWD/release:/opt/mount --rm --entrypoint /bin/bash duckdb-prql-extension -c "cp /tmp/release/prql.duckdb_extension /opt/mount/"

      - name: Upload prql extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: prql-extension
          path: release/prql.duckdb_extension
  
  build_duckdb_node:
    name: Build and upload DuckDB Node Lambda layer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build layer
        run: |
          # Create release folder
          mkdir -p $PWD/release

          # Run build
          docker build -t duckdb-lambda .

          # Copy release from image
          docker run -v $PWD/release:/opt/mount --rm --entrypoint /bin/bash duckdb-lambda -c "cp /tmp/release/duckdb-layer.zip /opt/mount/"          

      - name: Upload DuckDB Node build artifact
        uses: actions/upload-artifact@v3
        with:
          name: duckdb-node-zip
          path: release/duckdb-layer.zip

  publish_layer_without_extensions:
    name: Publish layer without extensions
    runs-on: ubuntu-latest
    needs: [build_duckdb_node]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: duckdb-node-zip
          path: duckdb-layer.zip

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1

      # - name: Publish layer
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_EC2_METADATA_DISABLED: 'true'
      #   run: bash $PWD/publish_layer.sh duckdb-nodejs-x86

  publish_layer_with_extensions:
    name: Publish layer with extensions
    runs-on: ubuntu-latest
    needs: [build_geo_extension, build_prql_extension, build_duckdb_node]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: duckdb-node-zip
          path: duckdb-layer.zip

      - uses: actions/download-artifact@v3
        with:
          name: geo-extension
          path: geo.duckdb_extension

      - uses: actions/download-artifact@v3
        with:
          name: prql-extension
          path: prql.duckdb_extension

      - name: Repackage & build layer
        env:
          EXTENSION_DIR: $PWD/layer/nodejs/node_modules/duckdb/extensions
        run: |
          # Create layer folder
          mkdir -p $PWD/layer

          # Unzip to layer folder
          unzip $PWD/duckdb-layer.zip -d layer

          # Create extension directory
          mkdir -p $EXTENSION_DIR

          # Add extensions
          mv $PWD/geo.duckdb_extension $EXTENSION_DIR
          mv $PWD/prql.duckdb_extension $EXTENSION_DIR

          # Zip layer
          cd $PWD/layer && zip -q -r $PWD/duckdb-layer.zip .

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1

      # - name: Publish layer
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_EC2_METADATA_DISABLED: 'true'
      #   run: bash $PWD/publish_layer.sh duckdb-nodejs-extensions-x86
