# See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
name: Build DuckDB Lambda extensions

on:
  workflow_dispatch:

  #push:
  #  branches: [ main ]

env:
  DUCKDB_VERSION: '0.8.1'

jobs:

  build_spatial_extension:
    name: Build and store spatial extension
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build spatial extension
        run: |
          # Create release folder
          mkdir -p $PWD/release

          # Run build
          docker build -t duckdb-spatial-extension -f Dockerfile.spatial.extension .

          # Copy release from image
          docker run -v $PWD/release:/opt/mount --rm --entrypoint /bin/bash duckdb-spatial-extension -c "cp /tmp/release/spatial.duckdb_extension /opt/mount/"

      - name: Upload spatial extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: spatial-extension
          path: release/spatial.duckdb_extension
  
  build_arrow_extension:
    name: Build and store arrow extension
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build arrow extension
        run: |
          # Create release folder
          mkdir -p $PWD/release

          # Run build
          docker build -t duckdb-arrow-extension -f Dockerfile.arrow.extension .

          # Copy release from image
          docker run -v $PWD/release/extensions/v${DUCKDB_VERSION}:/opt/mount --rm --entrypoint /bin/bash duckdb-arrow-extension -c "cp /tmp/release/arrow.duckdb_extension /opt/mount/"

      - name: Upload arrow extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: arrow-extension
          path: release/extensions/v${DUCKDB_VERSION}/arrow.duckdb_extension

  build_duckdb_node_for_spatial_extension_x86_64:
    name: Build DuckDB Node for the spatial extension for x86_64
    runs-on: ubuntu-latest
    env:
      ARCHITECTURE: x86_64
      # Needs to be the same as the commit hash of DuckDB referenced as submudule in https://github.com/duckdblabs/duckdb_spatial/tree/main
      DUCKDB_COMMIT_HASH: 57e2b43c9d913b87d3bf5de28cb037557c4e511a

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build layer
        run: |
          # Create release folder
          mkdir -p $PWD/release

          # Run build
          docker build --build-arg DUCKDB_COMMIT_HASH=$DUCKDB_COMMIT_HASH --build-arg DUCKDB_VERSION=$DUCKDB_VERSION --build-arg ARCHITECTURE=$ARCHITECTURE -t duckdb-lambda-spatial-$ARCHITECTURE -f Dockerfile.spatial.$ARCHITECTURE .

          # Copy release from image
          docker run -v $PWD/release:/opt/mount --rm --entrypoint /bin/bash duckdb-lambda-spatial-$ARCHITECTURE -c "cp /tmp/release/duckdb-layer-$ARCHITECTURE.zip /opt/mount/"

      - name: Upload DuckDB Node build artifact
        uses: actions/upload-artifact@v3
        with:
          name: duckdb-node-spatial-x86_64-zip
          path: release/duckdb-layer-x86_64.zip

  publish_layer_with_spatial_extension:
    name: Publish layer with spatial extension
    runs-on: ubuntu-latest
    needs: [build_spatial_extension, build_duckdb_node_for_spatial_extension_x86_64]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: duckdb-node-spatial-x86_64-zip

      - uses: actions/download-artifact@v3
        with:
          name: spatial-extension

      - name: Repackage & build layer
        run: |
          # Export extension dir
          export EXTENSION_DIR="$PWD/layer/nodejs/node_modules/duckdb/extensions"

          # Create layer folder
          mkdir -p $PWD/layer

          ls -la

          # Unzip to layer folder
          unzip -d layer/ $PWD/duckdb-layer-x86_64.zip

          # Delete original archive
          rm $PWD/duckdb-layer-x86_64.zip

          # Create extension directory
          mkdir -p $EXTENSION_DIR

          # Add extensions
          mv $PWD/spatial.duckdb_extension $EXTENSION_DIR

          # Show directory structure
          tree $PWD/layer

          # Zip layer
          cd $PWD/layer && zip -q -r ../duckdb-layer-x86_64.zip . && cd ..

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1

      - name: Publish layer
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: 'true'
        run: bash $PWD/publish_spatial_layer.sh
