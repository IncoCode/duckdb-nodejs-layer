FROM amazon/aws-lambda-nodejs:16 as builder
#FROM lambci/lambda as builder

ARG BRANCH=main

# Install dependencies
RUN yum update -y && \
  yum install git tar zip ninja-build make gcc-c++ openssl-static python-pip glibc-devel \
    libstdc++-devel wget java-1.8.0-openjdk zip maven unixODBC-devel glibc-devel readline-devel \
    libcurl-devel openssl-devel expat-devel gettext unzip libffi-devel curl zlib-devel openssh \
    cpp.x86_64 sqlite-devel.x86_64 libtiff.x86_64 -y && \
  yum remove cmake -y && \
  pip install cmake --upgrade

# Get DuckDB sources
RUN mkdir -p /tmp/from-git && cd /tmp/from-git && git clone https://github.com/duckdblabs/duckdb_spatial --branch $BRANCH --recurse-submodules --depth 1

# Build bundled sqlite3 and install it to /usr (overwrite the ancient system sqlite3 3.7)
# RUN cd /tmp/from-git/duckdb_spatial/deps/vendor/sqlite3 && \
#   mkdir build && \
#   cd build && \
#   cmake -DCMAKE_INSTALL_PREFIX=/usr/ .. \
#   && make install

# RUN wget https://github.com/openssl/openssl/releases/download/openssl-3.0.7/openssl-3.0.7.tar.gz && \
#   tar -xzvf openssl-3.0.7.tar.gz && \
#   cd openssl-3.0.7 && \
#   yum install perl-IPC-Cmd -y && \
#   find ./ -type f -exec sed -i -e 's/\#\ define\ OPENSSL\_VERSION\_NUMBER/\#define\ OPENSSL\_VERSION\_NUMBER/g' {} \; && \
#   ./config --libdir=lib no-shared zlib-dynamic && \
#   make && \
#   make install

RUN cd /tmp/from-git/duckdb_spatial && \
  export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH" && \
  STATIC_OPENSSL=1 STATIC_LIBCPP=1 OPENSSL_STATIC=1 OPENSSL_ROOT_DIR=/usr/lib64 OPENSSL_LIB_DIR=/usr/lib64 OPENSSL_INCLUDE_DIR=/usr/include CMAKE_BUILD_PARALLEL_LEVEL=$(nproc) make release

RUN strip --strip-unneeded /tmp/from-git/geo/build/release/extension/duckdb_spatial/spatial.duckdb_extension

# Create zip file with layer contents
RUN mkdir -p /tmp/release && cp /tmp/from-git/duckdb_spatial/build/release/extension/duckdb_spatial/spatial.duckdb_extension /tmp/release/spatial.duckdb_extension
