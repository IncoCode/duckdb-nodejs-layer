FROM amazon/aws-lambda-nodejs:16 as builder

ARG BRANCH=main

# Install dependencies
RUN yum update -y && \
  yum install git tar zip ninja-build make gcc-c++ openssl-static python-pip glibc-devel \
    libstdc++-devel wget java-1.8.0-openjdk zip maven unixODBC-devel glibc-devel readline-devel \
    libcurl-devel expat-devel gettext unzip libffi-devel curl zlib-devel openssh \
    cpp.x86_64 sqlite-devel.x86_64 libtiff.x86_64 -y && \
  yum remove cmake -y && \
  pip install cmake --upgrade

# Get DuckDB sources
RUN mkdir -p /tmp/from-git && cd /tmp/from-git && git clone https://github.com/duckdblabs/duckdb_spatial --branch $BRANCH --recurse-submodules --depth 1

# Build bundled sqlite3 and install it to /usr (overwrite the ancient system sqlite3 3.7)
RUN cd /tmp/from-git/duckdb_spatial/spatial/dependencies/third_party/sqlite3 && \
  mkdir build && \
  cd build && \
  cmake -DCMAKE_INSTALL_PREFIX=/usr/ .. \
  && make install

RUN wget https://github.com/openssl/openssl/archive/refs/tags/OpenSSL_1_1_1s.tar.gz && \
  tar -xzvf OpenSSL_1_1_1s.tar.gz && \
  mv openssl-OpenSSL_1_1_1s openssl-1.1.1s && \
  cd openssl-1.1.1s && \
  find ./ -type f -exec sed -i -e 's/\#\ define\ OPENSSL\_VERSION\_NUMBER/\#define\ OPENSSL\_VERSION\_NUMBER/g' {} \; && \
  ./config --libdir=lib no-shared zlib-dynamic && \
  make && \
  make install

RUN cd /tmp/from-git/duckdb_spatial && OPENSSL_ROOT_DIR=/usr/local/ssl CMAKE_BUILD_PARALLEL_LEVEL=$(nproc) make

RUN strip --strip-unneeded /tmp/from-git/geo/build/release/extension/duckdb_spatial/spatial.duckdb_extension

# Create zip file with layer contents
RUN mkdir -p /tmp/release && cp /tmp/from-git/duckdb_spatial/build/release/extension/duckdb_spatial/spatial.duckdb_extension /tmp/release/spatial.duckdb_extension
