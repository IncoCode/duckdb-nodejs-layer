FROM amazon/aws-lambda-nodejs:16 as builder

ARG BRANCH=main

# Install dependencies
RUN yum update -y && \
  yum install git tar zip ninja-build make gcc-c++ python-pip glibc-devel \
    libstdc++-devel wget java-1.8.0-openjdk zip maven unixODBC-devel glibc-devel readline-devel \
    libcurl-devel expat-devel gettext unzip libffi-devel curl zlib-devel openssh \
    cpp.x86_64 sqlite-devel.x86_64 libtiff.x86_64 -y && \
  yum remove cmake -y && \
  pip install cmake --upgrade
# openssl-static 
# Get DuckDB sources
RUN mkdir -p /tmp/from-git && cd /tmp/from-git && git clone https://github.com/duckdblabs/duckdb_spatial --branch $BRANCH --recurse-submodules --depth 1

RUN wget https://github.com/openssl/openssl/archive/refs/tags/OpenSSL_1_0_2u.tar.gz && \
  tar -xzvf OpenSSL_1_0_2u.tar.gz && \
  mv openssl-OpenSSL_1_0_2u openssl-1.0.2u && \
  cd openssl-1.0.2u && \
  find ./ -type f -exec sed -i -e 's/\#\ define\ OPENSSL\_VERSION\_NUMBER/\#define\ OPENSSL\_VERSION\_NUMBER/g' {} \; && \
  ./config --libdir=lib shared zlib-dynamic && \
  make && \
  make install

RUN cd /tmp/from-git/duckdb_spatial && \
  export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH" && \
  STATIC_OPENSSL=1 STATIC_LIBCPP=1 OPENSSL_STATIC=1 OPENSSL_ROOT_DIR=/usr/local/ssl CMAKE_BUILD_PARALLEL_LEVEL=$(nproc) make release

RUN cp /tmp/from-git/duckdb_spatial/build/release/extension/spatial/spatial.duckdb_extension /tmp/from-git/duckdb_spatial/build/release/extension/spatial/spatial_complete.duckdb_extension

RUN strip --strip-unneeded /tmp/from-git/duckdb_spatial/build/release/extension/spatial/spatial.duckdb_extension

# Create zip file with layer contents
RUN mkdir -p /tmp/release && cp /tmp/from-git/duckdb_spatial/build/release/extension/spatial/spatial.duckdb_extension /tmp/release/spatial.duckdb_extension
